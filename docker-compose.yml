version: "2"

networks:
  backend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/24
          gateway: 172.20.0.1

volumes:
  mariadb:
  npm_data:
  npm_letsencrypt:
  mqtt_data:
  node-red_data:

services:
  db:
    container_name: db
    image: 'mariadb:10'
    restart: unless-stopped
    networks:
      - backend
    environment:
      MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: "yes"
    volumes:
      - "mariadb:/var/lib/mysql"
      - "/etc/localtime:/etc/localtime:ro"

  npm:
    container_name: npm
    image: jc21/nginx-proxy-manager:latest
    restart: unless-stopped
    networks:
      - backend
    ports:
      # Public HTTP Port:
      - '80:80'
      # Public HTTPS Port:
      - '443:443'
      # Admin Web Port (accessible via NPM #loop):
      #- '81:81'
      # Add any other Stream port you want to expose
    environment:
      DB_MYSQL_HOST: "db"
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: "npm"
      DB_MYSQL_PASSWORD: "npm"
      DB_MYSQL_NAME: "npm"
      DISABLE_IPV6: 'true'
    volumes:
      - npm_data:/data
      - npm_letsencrypt:/etc/letsencrypt
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - db

  cert-watch:
    container_name: cert-watch
    build: ./cert-watch
    image: image-build/cert-watch
    restart: unless-stopped
    networks:
      - backend
    environment:
      COMPOSE_PROJECT_NAME: "${COMPOSE_PROJECT_NAME}"
    volumes:
      - npm_letsencrypt:/etc/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/workdir:ro

  mqtt:
    container_name: mqtt
    build: ./mqtt
    image: image-build/mqtt
    restart: unless-stopped
    networks:
      - backend
    ports:
      - "8883:8883"
      - "8884:8884"
    volumes:
      - ./mqtt-config:/mosquitto/config
      - mqtt_data:/mosquitto/data
      - npm_letsencrypt:/etc/letsencrypt:ro
      - /etc/localtime:/etc/localtime:ro

  node-red:
    container_name: node-red
    build: ./node-red
    image: image-build/node-red
    restart: unless-stopped
    networks:
      - backend
    volumes:
      - node-red_data:/data
      - /etc/localtime:/etc/localtime:ro
    user: node-red

######### Not in use yet
#  web-public:
#    container_name: web-public
#    build: ./webserver-public
#    restart: unless-stopped
#    networks:
#      - backend
#    volumes:
#      - "/opt/www-public:/var/www/html/"
#      - "/etc/localtime:/etc/localtime:ro"
#    depends_on:
#      - db