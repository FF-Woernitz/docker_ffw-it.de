networks:
  backend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/24
          gateway: 172.20.0.1

volumes:
  mariadb:
  traefik-certs-data:
  mqtt_data:
  node-red_data:
  hedgedoc-data:
  vaultwarden-data:

services:
  traefik:
    container_name: traefik
    image: traefik:latest
    restart: unless-stopped
    ports:
      # Public HTTP Port:
      - '80:80'
      # Public HTTPS Port:
      - '443:443'
      # MQTT
      - '8883:8883'
      - '8884:8884'
    environment:
      - HETZNER_API_KEY=${HETZNER_API_KEY}
      - TZ=Europe/Berlin
    networks:
      - backend
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./traefik/config.yml:/etc/traefik/traefik.yml:ro"
      - "./traefik/dynamic:/etc/traefik/dynamic:ro"
      - "traefik-certs-data:/etc/traefik/certs"
      - "./traefik/authorized-users:/authorized-users:ro"

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    restart: unless-stopped
    environment:
      - TZ=Europe/Berlin
      - WATCHTOWER_MONITOR_ONLY=true
      - WATCHTOWER_NOTIFICATION_URL=${WATCHTOWER_NOTIFICATION_URL}
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

  db:
    container_name: db
    image: 'mariadb:10'
    restart: unless-stopped
    networks:
      - backend
    environment:
      MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: "yes"
      TZ: Europe/Berlin
    volumes:
      - "mariadb:/var/lib/mysql"

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin:latest
    restart: unless-stopped
    networks:
      - backend
    environment:
      PMA_HOST: db
      TZ: Europe/Berlin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pma.rule=Host(`pma.vpn.ffw-it.de`)"
      - "traefik.http.routers.pma.entrypoints=websecure"
      - "traefik.http.routers.pma.middlewares=vpn-whitelist@file,authorized-users@file"
      - "traefik.http.routers.pma.tls=true"

  mqtt:
    container_name: mqtt
    image: eclipse-mosquitto:latest
    restart: unless-stopped
    networks:
      - backend
    environment:
      TZ: Europe/Berlin
    ports:
      - "10.14.0.5:1884:1884"
    volumes:
      - ./mqtt-config:/mosquitto/config
      - mqtt_data:/mosquitto/data
    labels:
      - "traefik.enable=true"

      - "traefik.tcp.routers.mqtt-public.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.mqtt-public.entrypoints=mqtt-public"
      - "traefik.tcp.routers.mqtt-public.tls=true"
      - "traefik.tcp.routers.mqtt-public.service=mqtt-public"
      - "traefik.tcp.services.mqtt-public.loadbalancer.server.port=8883"

      - "traefik.tcp.routers.mqtt-public-ws.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.mqtt-public-ws.entrypoints=mqtt-public-ws"
      - "traefik.tcp.routers.mqtt-public-ws.tls=true"
      - "traefik.tcp.routers.mqtt-public-ws.service=mqtt-public-ws"
      - "traefik.tcp.services.mqtt-public-ws.loadbalancer.server.port=8884"

  node-red:
    container_name: node-red
    image: nodered/node-red
    restart: unless-stopped
    networks:
      - backend
    environment:
      NODE_RED_ENABLE_PROJECTS: true
      TZ: Europe/Berlin
    volumes:
      - node-red_data:/data
    user: node-red
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.node-red.rule=Host(`flow.vpn.ffw-it.de`)"
      - "traefik.http.routers.node-red.entrypoints=websecure"
      - "traefik.http.routers.node-red.middlewares=vpn-whitelist@file,authorized-users@file"
      - "traefik.http.routers.node-red.tls=true"
      - "traefik.http.services.node-red.loadbalancer.server.port=1880"

  nextcloud_divera_bridge:
    container_name: nextcloud_divera_bridge
    image: ghcr.io/ff-woernitz/nextcloud_divera_bridge:master
    restart: unless-stopped
    networks:
      - backend
    environment:
      TZ: Europe/Berlin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nc-divera-bridge.rule=Host(`nc-divera-bridge.ffw-it.de`)"
      - "traefik.http.routers.nc-divera-bridge.entrypoints=websecure"
      - "traefik.http.routers.nc-divera-bridge.tls=true"
      - "traefik.http.services.nc-divera-bridge.loadbalancer.server.port=80"

  collabora:
    container_name: collabora
    image: collabora/code
    environment:
      - domain=cloud.ffw-it.de
      - "extra_params=--o:ssl.enable=false --o:ssl.termination=true --o:logging.disable_server_audit=true"
      - TZ=Europe/Berlin
    restart: unless-stopped
    networks:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.collabora.rule=Host(`collabora.ffw-it.de`)"
      - "traefik.http.routers.collabora.entrypoints=websecure"
      - "traefik.http.routers.collabora.tls=true"
      - "traefik.http.services.collabora.loadbalancer.server.port=9980"

  hedgedoc:
    container_name: hedgedoc
    image: quay.io/hedgedoc/hedgedoc:alpine
    restart: unless-stopped
    environment:
      - TZ=Europe/Berlin
      - CMD_DB_URL=mysql://hedgedoc:hedgedoc@db:3306/hedgedoc
      - CMD_DOMAIN=pad.ffw-it.de
      - CMD_PROTOCOL_USESSL=true
      - CMD_URL_ADDPORT=false
      - CMD_ALLOW_ANONYMOUS=false
      - CMD_ALLOW_ANONYMOUS_EDITS=true
      - CMD_DEFAULT_PERMISSION=private
      - CMD_EMAIL=false
      - CMD_ALLOW_EMAIL_REGISTER=False
      - CMD_OAUTH2_AUTHORIZATION_URL=https://cloud.ffw-it.de/apps/oauth2/authorize
      - CMD_OAUTH2_TOKEN_URL=https://cloud.ffw-it.de/apps/oauth2/api/v1/token
      - CMD_OAUTH2_USER_PROFILE_URL=https://cloud.ffw-it.de/ocs/v2.php/cloud/user?format=json
      - CMD_OAUTH2_USER_PROFILE_USERNAME_ATTR=ocs.data.id
      - CMD_OAUTH2_USER_PROFILE_DISPLAY_NAME_ATTR=ocs.data.display-name
      - CMD_OAUTH2_USER_PROFILE_EMAIL_ATTR=ocs.data.email
      - CMD_ALLOW_FREEURL=true
    env_file:
      - hedgedoc.env
    volumes:
      - hedgedoc-data:/hedgedoc/public/uploads
    networks:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pad.rule=Host(`pad.ffw-it.de`)"
      - "traefik.http.routers.pad.entrypoints=websecure"
      - "traefik.http.routers.pad.tls=true"
    depends_on:
      - db

  vaultwarden:
    container_name: vaultwarden
    image: vaultwarden/server:latest-alpine
    command:
      - /bin/sh
      - -c
      - |
        cp -Rf /tmp/overwrite/* /
        /start.sh
    restart: unless-stopped
    environment:
      - TZ=Europe/Berlin
      - PASSWORD_ITERATIONS=500000
      - SIGNUPS_ALLOWED=false
      - PUSH_ENABLED=true
      - PUSH_INSTALLATION_ID=00962a8f-48fe-4cb5-9b49-b26e0125b452
      - PUSH_RELAY_URI=https://api.bitwarden.eu
      - PUSH_IDENTITY_URI=https://identity.bitwarden.eu
      - SHOW_PASSWORD_HINT=false
      - EXTENDED_LOGGING=true
      - SMTP_HOST=mail.tobsa.wtf
      - SMTP_FROM=vault@ffw-it.de
      - SMTP_PORT=587
      - SMTP_SECURITY=starttls
      - SMTP_USERNAME=vault@ffw-it.de
      - DOMAIN=https://vault.ffw-it.de
    env_file:
      - vaultwarden.env
    volumes:
      - vaultwarden-data:/data
      - "./vaultwarden-overwrite:/tmp/overwrite"
    networks:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vault.rule=Host(`vault.ffw-it.de`)"
      - "traefik.http.routers.vault.entrypoints=websecure"
      - "traefik.http.routers.vault.tls=true"

######### Not in use yet
#  web-public:
#    container_name: web-public
#    build: ./webserver-public
#    restart: unless-stopped
#    networks:
#      - backend
#    environment:
#      TZ: Europe/Berlin
#    volumes:
#      - "/opt/www-public:/var/www/html/"
#    depends_on:
#      - db